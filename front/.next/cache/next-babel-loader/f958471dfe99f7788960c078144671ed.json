{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ohhj\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\prepare\\\\front\\\\pages\\\\index.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport { useSelector, useDispatch } from 'react-redux';\nimport AppLayout from \"../components/AppLayout\";\nimport PostForm from \"../components/PostForm\";\nimport PostCard from \"../components/PostCard\";\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Home = function Home() {\n  _s();\n  var dispatch = useDispatch();\n  var _useSelector = useSelector(function (state) {\n      return state.user;\n    }),\n    me = _useSelector.me; //사용자가 로그인 헀는지 안했는지 여부를 알려줌\n  var _useSelector2 = useSelector(function (state) {\n      return state.post;\n    }),\n    mainPosts = _useSelector2.mainPosts;\n  useEffect(function () {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(function () {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePost && !loadPostsLoading) {\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            data: mainPosts[mainPosts.length - 1].id\n          });\n        }\n      }\n    }\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts, hasMorePost, loadPostsLoading]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [me && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 20\n    }, _this), mainPosts.map(function (post) {\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 36\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, _this);\n};\n_s(Home, \"f1gOxVXguj7WckFOwK8UoWprV8U=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useSelector","useDispatch","AppLayout","PostForm","PostCard","React","useEffect","Home","dispatch","state","user","me","post","mainPosts","type","LOAD_POSTS_REQUEST","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","hasMorePost","loadPostsLoading","data","length","id","addEventListener","removeEventListener","map"],"sources":["C:/Users/ohhj/OneDrive/바탕 화면/prepare/front/pages/index.js"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport PostForm from \"../components/PostForm\";\r\nimport PostCard from \"../components/PostCard\";\r\nimport React, { useEffect } from 'react';\r\nconst Home = () => {\r\n    const dispatch = useDispatch();\r\n    const {me} = useSelector((state)=>state.user); //사용자가 로그인 헀는지 안했는지 여부를 알려줌\r\n    const {mainPosts} = useSelector((state)=>state.post);\r\n\r\n  \r\n\r\n    useEffect(() => {\r\n      dispatch({\r\n        type: LOAD_POSTS_REQUEST,\r\n      });\r\n    }, []);\r\n  \r\n    useEffect(() => {\r\n      function onScroll() {\r\n        if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n          if (hasMorePost && !loadPostsLoading) {\r\n            dispatch({\r\n              type: LOAD_POSTS_REQUEST,\r\n              data: mainPosts[mainPosts.length - 1].id,\r\n            });\r\n          }\r\n        }\r\n      }\r\n      window.addEventListener('scroll', onScroll);\r\n      return () => {\r\n        window.removeEventListener('scroll', onScroll);\r\n      };\r\n    }, [mainPosts, hasMorePost, loadPostsLoading]);\r\n\r\n\r\n    return(\r\n        <AppLayout> \r\n            {me && <PostForm/>}\r\n            {mainPosts.map((post)=><PostCard key={post.id} post={post}/>)}\r\n         \r\n        </AppLayout>\r\n    );\r\n}\r\n\r\nexport default Home;"],"mappings":";;;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC;AACzC,IAAMC,IAAI,GAAG,SAAPA,IAAI,GAAS;EAAA;EACf,IAAMC,QAAQ,GAAGP,WAAW,EAAE;EAC9B,mBAAaD,WAAW,CAAC,UAACS,KAAK;MAAA,OAAGA,KAAK,CAACC,IAAI;IAAA,EAAC;IAAtCC,EAAE,gBAAFA,EAAE,CAAqC,CAAC;EAC/C,oBAAoBX,WAAW,CAAC,UAACS,KAAK;MAAA,OAAGA,KAAK,CAACG,IAAI;IAAA,EAAC;IAA7CC,SAAS,iBAATA,SAAS;EAIhBP,SAAS,CAAC,YAAM;IACdE,QAAQ,CAAC;MACPM,IAAI,EAAEC;IACR,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAENT,SAAS,CAAC,YAAM;IACd,SAASU,QAAQ,GAAG;MAClB,IAAIC,MAAM,CAACC,OAAO,GAAGC,QAAQ,CAACC,eAAe,CAACC,YAAY,GAAGF,QAAQ,CAACC,eAAe,CAACE,YAAY,GAAG,GAAG,EAAE;QACxG,IAAIC,WAAW,IAAI,CAACC,gBAAgB,EAAE;UACpChB,QAAQ,CAAC;YACPM,IAAI,EAAEC,kBAAkB;YACxBU,IAAI,EAAEZ,SAAS,CAACA,SAAS,CAACa,MAAM,GAAG,CAAC,CAAC,CAACC;UACxC,CAAC,CAAC;QACJ;MACF;IACF;IACAV,MAAM,CAACW,gBAAgB,CAAC,QAAQ,EAAEZ,QAAQ,CAAC;IAC3C,OAAO,YAAM;MACXC,MAAM,CAACY,mBAAmB,CAAC,QAAQ,EAAEb,QAAQ,CAAC;IAChD,CAAC;EACH,CAAC,EAAE,CAACH,SAAS,EAAEU,WAAW,EAAEC,gBAAgB,CAAC,CAAC;EAG9C,oBACI,QAAC,SAAS;IAAA,WACLb,EAAE,iBAAI,QAAC,QAAQ;MAAA;MAAA;MAAA;IAAA,SAAE,EACjBE,SAAS,CAACiB,GAAG,CAAC,UAAClB,IAAI;MAAA,oBAAG,QAAC,QAAQ;QAAe,IAAI,EAAEA;MAAK,GAApBA,IAAI,CAACe,EAAE;QAAA;QAAA;QAAA;MAAA,SAAe;IAAA,EAAC;EAAA;IAAA;IAAA;IAAA;EAAA,SAErD;AAEpB,CAAC;AAAA,GAtCKpB,IAAI;EAAA,QACWN,WAAW,EACfD,WAAW,EACJA,WAAW;AAAA;AAAA,KAH7BO,IAAI;AAwCV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module"}