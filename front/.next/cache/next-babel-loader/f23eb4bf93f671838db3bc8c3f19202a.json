{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n//초기상태\nvar initialState = {\n  user: {\n    isLoggedIn: false,\n    user: null,\n    signUpDate: {},\n    loginData: {}\n  },\n  post: {\n    mainPosts: []\n  }\n};\n// const initialState = {\n//     name:'mememe',\n//     age:27,\n//     password:'metoo'\n// };\n\n//action creator\n//사용 예시 store.dispatch(changeNickname('바뀔 닉네임'))\nvar changeNickname = function changeNickname(data) {\n  return {\n    type: 'CHANGE_NICKNAME',\n    data: data\n  };\n};\n//로그인 액션\nvar login = function login(data) {\n  return {\n    type: 'LOG_IN',\n    data: data\n  };\n};\n\n//async action creator 비동기 액션 크리에이터\n\n// const changeNickname = {\n//     type: 'CHANGE_NICKNAME',\n//     data: 'youu',\n// }\n\n//(이전상태, 액션)=> 다음상태를 만들어내는 함수\n// const rootReducer = (( state = initialState, action)=>{\n//     switch(action.type){\n//         case 'CHANGE_NICKNAME':\n//             return{\n//                 ...state,\n//                 name: action.data,\n//             }\n//     }\n// });\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'LOG_IN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          // 안 바꾸고 싶은것은 참조로 해주기\n          isLoggedIn: true,\n          //바꾸고 싶은 것은 이렇게 변경해주기\n          user: action.data\n        })\n      });\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["initialState","user","isLoggedIn","signUpDate","loginData","post","mainPosts","changeNickname","data","type","login","rootReducer","state","action"],"sources":["C:/Users/ohhj/OneDrive/바탕 화면/prepare/front/reducers/index.js"],"sourcesContent":["//초기상태\r\nconst initialState = {\r\n    user: {\r\n        isLoggedIn:false,\r\n        user: null,\r\n        signUpDate: {},\r\n        loginData: {},\r\n    },\r\n    post:{\r\n        mainPosts: [],\r\n    }\r\n};\r\n// const initialState = {\r\n//     name:'mememe',\r\n//     age:27,\r\n//     password:'metoo'\r\n// };\r\n\r\n//action creator\r\n//사용 예시 store.dispatch(changeNickname('바뀔 닉네임'))\r\nconst changeNickname = (data) =>{\r\n    return{\r\n        type: 'CHANGE_NICKNAME',\r\n        data,\r\n    }\r\n};\r\n//로그인 액션\r\nconst login = (data) =>{\r\n    return{\r\n        type: 'LOG_IN',\r\n        data,\r\n    }\r\n};\r\n\r\n//async action creator 비동기 액션 크리에이터\r\n\r\n// const changeNickname = {\r\n//     type: 'CHANGE_NICKNAME',\r\n//     data: 'youu',\r\n// }\r\n\r\n\r\n//(이전상태, 액션)=> 다음상태를 만들어내는 함수\r\n// const rootReducer = (( state = initialState, action)=>{\r\n//     switch(action.type){\r\n//         case 'CHANGE_NICKNAME':\r\n//             return{\r\n//                 ...state,\r\n//                 name: action.data,\r\n//             }\r\n//     }\r\n// });\r\n\r\nconst rootReducer = (( state = initialState, action)=>{\r\n    switch(action.type){\r\n        case 'LOG_IN':\r\n            return{\r\n                ...state,\r\n                user:{\r\n                    ...state.user,// 안 바꾸고 싶은것은 참조로 해주기\r\n                    isLoggedIn: true, //바꾸고 싶은 것은 이렇게 변경해주기\r\n                    user: action.data,\r\n                },\r\n            };\r\n    }\r\n});\r\n\r\n\r\nexport default rootReducer;"],"mappings":";;;AAAA;AACA,IAAMA,YAAY,GAAG;EACjBC,IAAI,EAAE;IACFC,UAAU,EAAC,KAAK;IAChBD,IAAI,EAAE,IAAI;IACVE,UAAU,EAAE,CAAC,CAAC;IACdC,SAAS,EAAE,CAAC;EAChB,CAAC;EACDC,IAAI,EAAC;IACDC,SAAS,EAAE;EACf;AACJ,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAAIC,IAAI,EAAI;EAC5B,OAAM;IACFC,IAAI,EAAE,iBAAiB;IACvBD,IAAI,EAAJA;EACJ,CAAC;AACL,CAAC;AACD;AACA,IAAME,KAAK,GAAG,SAARA,KAAK,CAAIF,IAAI,EAAI;EACnB,OAAM;IACFC,IAAI,EAAE,QAAQ;IACdD,IAAI,EAAJA;EACJ,CAAC;AACL,CAAC;;AAED;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMG,WAAW,GAAI,SAAfA,WAAW,GAAqC;EAAA,IAA/BC,KAAK,uEAAGZ,YAAY;EAAA,IAAEa,MAAM;EAC/C,QAAOA,MAAM,CAACJ,IAAI;IACd,KAAK,QAAQ;MACT,uCACOG,KAAK;QACRX,IAAI,kCACGW,KAAK,CAACX,IAAI;UAAC;UACdC,UAAU,EAAE,IAAI;UAAE;UAClBD,IAAI,EAAEY,MAAM,CAACL;QAAI;MACpB;EACH;AAEd,CAAE;AAGF,eAAeG,WAAW"},"metadata":{},"sourceType":"module"}