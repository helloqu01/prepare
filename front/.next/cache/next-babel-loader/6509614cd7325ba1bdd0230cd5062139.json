{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ohhj\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\prepare\\\\front\\\\components\\\\PostCard.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined, HeartTwoTone } from \"@ant-design/icons\";\nimport { Avatar, Button, Card, Popover, List, Comment } from \"antd\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport PostImages from './PostImages';\nimport { useCallback, useState } from \"react\";\nimport CommentForm from \"./CommentForm\";\nimport PostCardContent from './PostCardContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar PostCard = function PostCard(_ref) {\n  _s();\n  var post = _ref.post;\n  // const {me} = useSelector((state)=>state.user);\n  // const id = me?.id; //옵셔널 체이닝 연산자\n  var dispatch = useDispatch();\n  var _useState = useState(false),\n    linked = _useState[0],\n    setLinked = _useState[1];\n  var _useState2 = useState(false),\n    commentFormOpened = _useState2[0],\n    setCommentFormOpened = _useState2[1];\n  var _useSelector = useSelector(function (state) {\n      return state.post;\n    }),\n    removePostLoading = _useSelector.removePostLoading; //로딩창이 돌아가게 하는 것 \n\n  var id = useSelector(function (state) {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  }); //있나 없나\n  var onToggleLike = useCallback(function () {\n    setLinked(function (prev) {\n      return !prev;\n    }); //토글 부분 \n  }, []);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    }); //토글 부분 \n  }, []);\n  var onRemovePost = useCallback(function () {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 44\n      }, _this) //이미지가 1개 이상 있을 때 PostImages 를 보여준다.\n      ,\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, _this), linked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 24\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              loading: removePostLoading,\n              onClick: onRemovePost,\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 25\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 20\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, _this),\n        children: [\" \", /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 32\n        }, _this), \" \"]\n      }, \"more\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 72\n      }, _this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, _this),\n        title: post.User.nickname,\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 30\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, _this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(List, {\n        header: \"\".concat(post.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: function renderItem(item) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Comment, {\n              author: item.User.nickname,\n              avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: item.User.nickname[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 45\n              }, _this),\n              content: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, _this);\n};\n_s(PostCard, \"zbHlP0cbwyXmhDkunxzTsTxj9ew=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = PostCard;\nPostCard.PropTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createAt: PropTypes.object,\n    Conmments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\nvar _c;\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["EllipsisOutlined","HeartOutlined","MessageOutlined","RetweetOutlined","HeartTwoTone","Avatar","Button","Card","Popover","List","Comment","useSelector","useDispatch","PropTypes","PostImages","useCallback","useState","CommentForm","PostCardContent","PostCard","post","dispatch","linked","setLinked","commentFormOpened","setCommentFormOpened","state","removePostLoading","id","user","me","onToggleLike","prev","onToggleComment","onRemovePost","type","REMOVE_POST_REQUEST","data","Images","User","nickname","content","Comments","length","item","shape","number","object","string","createAt","Conmments","arrayOf","isRequired"],"sources":["C:/Users/ohhj/OneDrive/바탕 화면/prepare/front/components/PostCard.js"],"sourcesContent":["import { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined, HeartTwoTone } from \"@ant-design/icons\";\r\nimport { Avatar, Button,Card, Popover,  List,  Comment} from \"antd\";\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport PostImages from './PostImages';\r\nimport { useCallback, useState } from \"react\";\r\n\r\nimport CommentForm from \"./CommentForm\";\r\nimport PostCardContent from './PostCardContent';\r\n\r\n\r\nconst PostCard = ({post}) => {\r\n    // const {me} = useSelector((state)=>state.user);\r\n    // const id = me?.id; //옵셔널 체이닝 연산자\r\n    const dispatch = useDispatch();\r\n    const [linked, setLinked] = useState(false);\r\n    const [commentFormOpened,setCommentFormOpened]= useState(false);\r\n\r\n    const { removePostLoading } = useSelector((state) => state.post); //로딩창이 돌아가게 하는 것 \r\n\r\n    const id = useSelector((state)=>state.user.me?.id);//있나 없나\r\n    const onToggleLike = useCallback(()=>{\r\n        setLinked((prev)=>!prev);//토글 부분 \r\n    }, []);\r\n    const onToggleComment = useCallback(()=>{\r\n        setCommentFormOpened((prev)=>!prev);//토글 부분 \r\n    }, []);\r\n    const onRemovePost = useCallback(() => {\r\n        dispatch({\r\n          type: REMOVE_POST_REQUEST,\r\n          data: post.id,\r\n        });\r\n      }, []);\r\n    return(\r\n        <div>\r\n            <Card cover={post.Images[0] && <PostImages images={post.Images}/>}  //이미지가 1개 이상 있을 때 PostImages 를 보여준다.\r\n            actions={[ \r\n            <RetweetOutlined key=\"retweet\"/>,\r\n            linked \r\n                ?   <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike}/>\r\n                :   <HeartOutlined key=\"heart\" onClick={onToggleLike}/>,\r\n          \r\n            <MessageOutlined key=\"comment\" onClick={onToggleComment}/>,<Popover key=\"more\" content={( \r\n            <Button.Group>\r\n                {id && post.User.id === id ? (\r\n                    <>\r\n                       <Button>수정</Button>  \r\n                        <Button type=\"danger\" loading={removePostLoading} onClick={onRemovePost}>삭제</Button>  \r\n                    </>\r\n                ): <Button>신고</Button> }\r\n             \r\n            </Button.Group>)}> <EllipsisOutlined/> </Popover>,]}>\r\n\r\n            <Card.Meta\r\n                avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                title={post.User.nickname}\r\n                description={<PostCardContent postData={post.content} />}\r\n            />\r\n            </Card>\r\n            {commentFormOpened && (\r\n                <div>\r\n                    <CommentForm post={post}/> \r\n                    <List\r\n                        header={`${post.Comments.length}개의 댓글`}\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={post.Comments}\r\n                        renderItem={(item) => (\r\n                            <li>\r\n                                <Comment \r\n                                    author={item.User.nickname}\r\n                                    avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                                    content={item.content}\r\n                                />\r\n                            </li>\r\n                        )}\r\n                    />   \r\n                </div>\r\n            )}\r\n            {/*\r\n            <Comments/> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nPostCard.PropTypes={\r\n    post: PropTypes.shape({\r\n        id:PropTypes.number,\r\n        User:PropTypes.object,\r\n        content: PropTypes.string,\r\n        createAt: PropTypes.object,\r\n        Conmments: PropTypes.arrayOf(PropTypes.object),\r\n        Images: PropTypes.arrayOf(PropTypes.object),\r\n    }).isRequired,\r\n};\r\n\r\nexport default PostCard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}