{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n//초기상태\nvar initialState = {\n  name: 'mememe',\n  age: 27,\n  password: 'metoo'\n};\nvar changeNickname = function changeNickname(data) {\n  return {\n    type: 'CHANGE_NICKNAME',\n    data: data\n  };\n};\n// const changeNickname = {\n//     type: 'CHANGE_NICKNAME',\n//     data: 'youu',\n// }\n\n//(이전상태, 액션)=> 다음상태를 만들어내는 함수\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'CHANGE_NICKNAME':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        name: action.data\n      });\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["initialState","name","age","password","changeNickname","data","type","rootReducer","state","action"],"sources":["C:/Users/ohhj/OneDrive/바탕 화면/prepare/front/reducers/index.js"],"sourcesContent":["//초기상태\r\nconst initialState = {\r\n    name:'mememe',\r\n    age:27,\r\n    password:'metoo'\r\n};\r\n\r\nconst changeNickname = (data) =>{\r\n    return{\r\n        type: 'CHANGE_NICKNAME',\r\n        data,\r\n    }\r\n}\r\n// const changeNickname = {\r\n//     type: 'CHANGE_NICKNAME',\r\n//     data: 'youu',\r\n// }\r\n\r\n\r\n//(이전상태, 액션)=> 다음상태를 만들어내는 함수\r\nconst rootReducer = (( state = initialState, action)=>{\r\n    switch(action.type){\r\n        case 'CHANGE_NICKNAME':\r\n            return{\r\n                ...state,\r\n                name: action.data,\r\n            }\r\n    }\r\n});\r\n\r\nexport default rootReducer;"],"mappings":";;;AAAA;AACA,IAAMA,YAAY,GAAG;EACjBC,IAAI,EAAC,QAAQ;EACbC,GAAG,EAAC,EAAE;EACNC,QAAQ,EAAC;AACb,CAAC;AAED,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAAIC,IAAI,EAAI;EAC5B,OAAM;IACFC,IAAI,EAAE,iBAAiB;IACvBD,IAAI,EAAJA;EACJ,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;;AAGA;AACA,IAAME,WAAW,GAAI,SAAfA,WAAW,GAAqC;EAAA,IAA/BC,KAAK,uEAAGR,YAAY;EAAA,IAAES,MAAM;EAC/C,QAAOA,MAAM,CAACH,IAAI;IACd,KAAK,iBAAiB;MAClB,uCACOE,KAAK;QACRP,IAAI,EAAEQ,MAAM,CAACJ;MAAI;EACpB;AAEb,CAAE;AAEF,eAAeE,WAAW"},"metadata":{},"sourceType":"module"}