{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport reducer from '../reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\n;\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  store.dispatch({\n    type: 'CHANGE_NICKNAME',\n    data: 'youu'\n  });\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\nconst weapper = createWrapper(configureStore, {\n  //개발할 때 디버깅에 도움을 준다\n  debug: true\n});\nexport default weapper;","map":{"version":3,"names":["createWrapper","applyMiddleware","compose","createStore","reducer","composeWithDevTools","createSagaMiddleware","rootSaga","configureStore","sagaMiddleware","middlewares","enhancer","store","dispatch","type","data","sagaTask","run","weapper","debug"],"sources":["C:/Users/ohhj/OneDrive/바탕 화면/prepare/front/store/configureStore.js"],"sourcesContent":["import {createWrapper} from 'next-redux-wrapper';\r\nimport { applyMiddleware, compose, createStore } from 'redux'\r\nimport reducer from '../reducers';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from '../sagas';;\r\n\r\nconst configureStore = () => { \r\n    const sagaMiddleware = createSagaMiddleware(); \r\n    const middlewares =[sagaMiddleware];\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n    ? compose(applyMiddleware(...middlewares))\r\n    : composeWithDevTools(applyMiddleware(...middlewares))\r\n    const store = createStore(reducer, enhancer);\r\n        store.dispatch({\r\n            type: 'CHANGE_NICKNAME',\r\n            data: 'youu',\r\n        })\r\n        store.sagaTask = sagaMiddleware.run(rootSaga);\r\n    return store;\r\n\r\n};\r\n\r\nconst weapper = createWrapper(configureStore, { \r\n    //개발할 때 디버깅에 도움을 준다\r\n    debug: process.env.NODE_ENV === 'development'\r\n});\r\n\r\nexport default weapper;"],"mappings":"AAAA,SAAQA,aAAa,QAAO,oBAAoB;AAChD,SAASC,eAAe,EAAEC,OAAO,EAAEC,WAAW,QAAQ,OAAO;AAC7D,OAAOC,OAAO,MAAM,aAAa;AACjC,SAAQC,mBAAmB,QAAO,0BAA0B;AAC5D,OAAOC,oBAAoB,MAAM,YAAY;AAC7C,OAAOC,QAAQ,MAAM,UAAU;AAAC;AAEhC,MAAMC,cAAc,GAAG,MAAM;EACzB,MAAMC,cAAc,GAAGH,oBAAoB,EAAE;EAC7C,MAAMI,WAAW,GAAE,CAACD,cAAc,CAAC;EACnC,MAAME,QAAQ,GAAG,QACfT,OAAO,CAACD,eAAe,CAAC,GAAGS,WAAW,CAAC,CAAC,GACxCL,mBAAmB,CAACJ,eAAe,CAAC,GAAGS,WAAW,CAAC,CAAC;EACtD,MAAME,KAAK,GAAGT,WAAW,CAACC,OAAO,EAAEO,QAAQ,CAAC;EACxCC,KAAK,CAACC,QAAQ,CAAC;IACXC,IAAI,EAAE,iBAAiB;IACvBC,IAAI,EAAE;EACV,CAAC,CAAC;EACFH,KAAK,CAACI,QAAQ,GAAGP,cAAc,CAACQ,GAAG,CAACV,QAAQ,CAAC;EACjD,OAAOK,KAAK;AAEhB,CAAC;AAED,MAAMM,OAAO,GAAGlB,aAAa,CAACQ,cAAc,EAAE;EAC1C;EACAW,KAAK;AACT,CAAC,CAAC;AAEF,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}